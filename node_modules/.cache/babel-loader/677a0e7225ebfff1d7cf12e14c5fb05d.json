{"ast":null,"code":"var _jsxFileName = \"/home/flavia/Documentos/Programacion/Florencia/bodega/src/contexts/PaginationContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PaginationContext = /*#__PURE__*/createContext();\nexport const PaginationProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [pagination, setPagination] = useState({\n    numberPages: 1,\n    selectedPage: 1\n  }); // I'm going to add different methods that will be definitely useful for interacting with the pagination :D\n  // Voy a añadir diferentes métodos que definitivamente serán útiles para la interacción con la paginación ^-^\n\n  const clearPagination = () => {\n    setPagination({\n      numberPages: 1,\n      selectedPage: 1\n    });\n  };\n\n  const showPaginationStatus = () => {\n    console.log(pagination);\n  };\n\n  const setNumberPages = numberPages => {\n    setPagination({ ...pagination,\n      numberPages\n    });\n  };\n\n  const setSelectedPage = selectedPage => {\n    console.log(pagination);\n    setPagination({ ...pagination,\n      selectedPage\n    });\n  };\n\n  const moveToNextPage = () => {\n    console.log(pagination);\n\n    if (Number(pagination.numberPages) >= Number(pagination.selectedPage) + 1) {\n      setSelectedPage(pagination.selectedPage + 1);\n    } else {\n      setSelectedPage(1);\n    }\n  };\n\n  const moveToPreviousPage = () => {\n    console.log(pagination);\n\n    if (Number(pagination.selectedPage) > 1) {\n      setSelectedPage(Number(pagination.selectedPage) - 1);\n    } else {\n      setSelectedPage(1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PaginationContext.Provider, {\n    value: {\n      pagination,\n      setPagination,\n      setSelectedPage,\n      setNumberPages,\n      clearPagination,\n      moveToNextPage,\n      moveToPreviousPage,\n      showPaginationStatus\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PaginationProvider, \"ePSKgJoAhz8Nx7zRGX6CRlYRtDo=\");\n\n_c = PaginationProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginationProvider\");","map":{"version":3,"sources":["/home/flavia/Documentos/Programacion/Florencia/bodega/src/contexts/PaginationContext.jsx"],"names":["createContext","useState","useContext","PaginationContext","PaginationProvider","children","pagination","setPagination","numberPages","selectedPage","clearPagination","showPaginationStatus","console","log","setNumberPages","setSelectedPage","moveToNextPage","Number","moveToPreviousPage"],"mappings":";;;AAAA,SAAQA,aAAR,EAAsBC,QAAtB,EAAgCC,UAAhC,QAAiD,OAAjD;;AAIA,OAAO,MAAMC,iBAAiB,gBAAGH,aAAa,EAAvC;AAEP,OAAO,MAAMI,kBAAkB,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC9C,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA6BN,QAAQ,CAAC;AACxCO,IAAAA,WAAW,EAAE,CAD2B;AAExCC,IAAAA,YAAY,EAAE;AAF0B,GAAD,CAA3C,CAD8C,CAO9C;AAEA;;AAGA,QAAMC,eAAe,GAAG,MAAM;AAC1BH,IAAAA,aAAa,CAAC;AACVC,MAAAA,WAAW,EAAE,CADH;AAEVC,MAAAA,YAAY,EAAE;AAFJ,KAAD,CAAb;AAIH,GALD;;AAOA,QAAME,oBAAoB,GAAG,MAAM;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACH,GAFD;;AAKA,QAAMQ,cAAc,GAAIN,WAAD,IAAiB;AACpCD,IAAAA,aAAa,CAAC,EACV,GAAGD,UADO;AAEVE,MAAAA;AAFU,KAAD,CAAb;AAIH,GALD;;AAOA,QAAMO,eAAe,GAAIN,YAAD,IAAkB;AACtCG,IAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACAC,IAAAA,aAAa,CAAC,EACV,GAAGD,UADO;AAEVG,MAAAA;AAFU,KAAD,CAAb;AAIH,GAND;;AAQA,QAAMO,cAAc,GAAG,MAAM;AACzBJ,IAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;;AACA,QAAGW,MAAM,CAACX,UAAU,CAACE,WAAZ,CAAN,IAAmCS,MAAM,CAACX,UAAU,CAACG,YAAZ,CAAN,GAAkC,CAAxE,EAA2E;AACvEM,MAAAA,eAAe,CAAET,UAAU,CAACG,YAAX,GAA0B,CAA5B,CAAf;AACH,KAFD,MAEK;AACDM,MAAAA,eAAe,CAAC,CAAD,CAAf;AACH;AACJ,GAPD;;AASA,QAAMG,kBAAkB,GAAG,MAAM;AAC7BN,IAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;;AACA,QAAGW,MAAM,CAACX,UAAU,CAACG,YAAZ,CAAN,GAAkC,CAArC,EAAuC;AACnCM,MAAAA,eAAe,CAACE,MAAM,CAACX,UAAU,CAACG,YAAZ,CAAN,GAAkC,CAAnC,CAAf;AACH,KAFD,MAEK;AACDM,MAAAA,eAAe,CAAC,CAAD,CAAf;AACH;AACJ,GAPD;;AAWA,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAACT,MAAAA,UAAD;AAAYC,MAAAA,aAAZ;AAA0BQ,MAAAA,eAA1B;AAA0CD,MAAAA,cAA1C;AAAyDJ,MAAAA,eAAzD;AAAyEM,MAAAA,cAAzE;AAAwFE,MAAAA,kBAAxF;AAA2GP,MAAAA;AAA3G,KAAnC;AAAA,cACKN;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhEM;;GAAMD,kB;;KAAAA,kB","sourcesContent":["import {createContext,useState, useContext} from \"react\";\n\n\n\nexport const PaginationContext = createContext();\n\nexport const PaginationProvider = ({children}) => {\n    const [pagination,setPagination] = useState({\n        numberPages: 1,\n        selectedPage: 1\n    });\n\n\n    // I'm going to add different methods that will be definitely useful for interacting with the pagination :D\n\n    // Voy a añadir diferentes métodos que definitivamente serán útiles para la interacción con la paginación ^-^\n\n\n    const clearPagination = () => {\n        setPagination({\n            numberPages: 1,\n            selectedPage: 1\n        })\n    }\n\n    const showPaginationStatus = () => {\n        console.log(pagination);\n    }\n\n\n    const setNumberPages = (numberPages) => {\n        setPagination({\n            ...pagination,\n            numberPages\n        })\n    }\n\n    const setSelectedPage = (selectedPage) => {\n        console.log(pagination)\n        setPagination({\n            ...pagination,\n            selectedPage\n        })\n    }\n\n    const moveToNextPage = () => {\n        console.log(pagination)\n        if(Number(pagination.numberPages) >= (Number(pagination.selectedPage) + 1)){\n            setSelectedPage((pagination.selectedPage + 1));\n        }else{\n            setSelectedPage(1);\n        }\n    }\n\n    const moveToPreviousPage = () => {\n        console.log(pagination)\n        if(Number(pagination.selectedPage) > 1){\n            setSelectedPage(Number(pagination.selectedPage) - 1);\n        }else{\n            setSelectedPage(1);\n        }\n    }\n\n\n\n    return(\n        <PaginationContext.Provider value={{pagination,setPagination,setSelectedPage,setNumberPages,clearPagination,moveToNextPage,moveToPreviousPage,showPaginationStatus}}>\n            {children}\n        </PaginationContext.Provider>\n    );\n};"]},"metadata":{},"sourceType":"module"}